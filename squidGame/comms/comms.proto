syntax = "proto3";
package comms;

option go_package = "./;comms";

message JugadorEtapa1 {
  int32 escogidoJugador = 1; // debe estar entre 1 y 10
  int32 numJug = 2;
}

message EstadoEtapa1 {
  bool vivo = 1; // define si murio
  int32 escogidoLider = 2; // entre 6 y 10
  bool win = 3; // define si gano
  int32 round = 4;
}

message MontoAcumulado {
  int64 monto = 1;
}

message JugadaDataNode{
  int32 jugador=1;
  int32 ronda=2;
  int32 jugada=3;
}

message Jugador{
  int32 numJug=1;
}

message JugadorEtapa{
  int32 jugador=1;
  int32 etapa=2;
}

message HistorialJugadas{
  int32 jugador=1;
  int32 ronda1=2;
  int32 ronda2=3;
  int32 ronda3=4;
  int32 ronda4=5;
  int32 etapa2=6;
  int32 etapa3=7;
}

message Empty {
  // No poner nada, est√° asi a proposito
}

service Juego1 {
  rpc Etapa1(JugadorEtapa1) returns (EstadoEtapa1) {}
  rpc QuieroJugar(Empty) returns (Jugador) {}
}

service MensajeDataLider{
  rpc Jugada(JugadaDataNode) returns (Empty){}
  rpc HistorialJugador(Jugador) returns (HistorialJugadas){}
}

service Pozo {
  rpc PedidoPozo(Empty) returns (MontoAcumulado) {}
}

service DataNode {
  rpc GuardarDatos(JugadaDataNode) returns (Empty) {}
  rpc PedirDatos(Jugador) returns (HistorialJugadas) {}
}